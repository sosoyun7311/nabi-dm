{"version":3,"sources":["layout/Menu.js","board/Board.js","main/Main.js","board/BoardEnrollment.js","login/login.js","layout/Layout.js","reportWebVitals.js","index.js"],"names":["Main","useState","activeName","setActiveName","clickedMenu","e","name","Menu","Item","as","Link","to","active","onClick","position","href","ModalCustom","props","updateData","setUpdateData","updateModalData","setUpdateModalData","boardDataUpdateFun","type","obj","id","title","content","axios","post","then","res","window","location","replace","Table","celled","padded","Body","Row","HeaderCell","Cell","Input","value","onChange","target","TextArea","style","minHeight","minWidth","registrationDate","Modal","Actions","Button","color","Board","list","setList","useEffect","method","url","data","marginBottom","floated","Header","singleLine","map","val","trigger","header","BoardEnrollment","insertData","setInsertData","d","Login","setId","password","setPassword","action","className","Layout","margin","padding","width","marginTop","path","component","Segment","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52e6c968.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Menu, Grid} from \"semantic-ui-react\";\n\nimport {Link} from 'react-router-dom'\n\nconst Main = () => {\n\t\tconst [activeName, setActiveName] = useState('');\n\n\t\tconst clickedMenu = (e,{name}) => setActiveName(name)\n\n\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t\t<Menu>\n\t\t\t\t\t\t\t\t<Menu.Item as={Link} to='/main'  name='main' active={activeName === 'main'}\n\t\t\t\t\t\t\t\t           onClick={clickedMenu}/>\n\t\t\t\t\t\t\t\t<Menu.Item as={Link} to='/board'  name='board' active={activeName === 'board'}\n\t\t\t\t\t\t\t\t            onClick={clickedMenu}/>\n\t\t\t\t\t\t\t\t<Menu.Menu position='right'>\n\t\t\t\t\t\t\t\t\t\t<Menu.Item href='/security_logout'  name='logout' active={activeName === 'logout'}\n\t\t\t\t\t\t\t\t\t\t           onClick={clickedMenu}/>\n\t\t\t\t\t\t\t\t</Menu.Menu>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t</>\n\t\t);\n}\n\nexport default Main;\n","import axios from 'axios';\nimport React, {useEffect, useState} from \"react\";\nimport { Link } from 'react-router-dom';\nimport {Button, Table, Modal, Input, TextArea} from 'semantic-ui-react'\n\n\nconst Board = () =>{\n  const [list, setList] = useState([])\n\n  const initData = () =>{\n    axios({\n      method:'get',\n      url:'/api/boardList'\n    }).then((res) => {\n      setList(res.data);\n    })\n\n  }\n\n  useEffect(() => {\n    initData();\n  },[])\n\n\n  return (\n    <div>\n      <div style={{marginBottom:'3px'}}>\n        <Button color='gray' as={Link} to='/board/enrollment' floated={'right'}>등록</Button>\n      </div>\n      <Table celled padded>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell singleLine>번호</Table.HeaderCell>\n            <Table.HeaderCell>제목</Table.HeaderCell>\n            <Table.HeaderCell>내용</Table.HeaderCell>\n            <Table.HeaderCell>등록일</Table.HeaderCell>\n            <Table.HeaderCell> </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n        {\n          list.map(val => {\n            return (\n              <>\n                <Table.Row>\n                  <Table.Cell>{val.id}</Table.Cell>\n                  <Table.Cell>{val.title}</Table.Cell>\n                  <Table.Cell>{val.content}</Table.Cell>\n                  <Table.Cell>{val.registrationDate}</Table.Cell>\n                  <Table.Cell>\n\n                    <Modal\n                        trigger={<Button>상세보기</Button>}\n                        header='상세보기'\n                        content={<ModalCustom props={val} />}\n                    ></Modal>\n                  </Table.Cell>\n                </Table.Row>\n              </>\n            )\n          })\n        }\n        </Table.Body>\n      </Table>\n    </div>\n  );\n}\n\n\nconst ModalCustom = ({props}) => {\n  const [updateData, setUpdateData] = useState(props);\n  const [updateModalData, setUpdateModalData] = useState(false);\n\n\n  const boardDataUpdateFun = (type) => {\n\n    let obj ;\n\n    if(type === 'delete'){\n      obj = {\n          \"id\": props.id,\n          \"deleteYn\" : 'Y'\n      };\n    }else {\n      obj = {\n        \"id\": props.id,\n        \"title\":updateData.title,\n        \"content\" : updateData.content,\n        \"deleteYn\" : 'N'\n      };\n    }\n\n    axios.post('/api/boardUpdate', obj)\n        .then(function(res){\n          window.location.replace(\"/board\");\n        })\n  }\n\n  return (\n    <>\n    <Table celled padded>\n      <Table.Body>\n        <Table.Row>\n          <Table.HeaderCell>제목</Table.HeaderCell>\n          <Table.Cell>\n            {\n              updateModalData === true ? <Input type=\"text\" value={updateData.title} onChange={(e) => setUpdateData({...updateData, title : e.target.value }) } />  : <span>{props.title}</span>\n            }\n\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.HeaderCell>내용</Table.HeaderCell>\n          <Table.Cell>\n            {\n              updateModalData === true ? <TextArea style={{ minHeight: 100, minWidth:300 }} value={updateData.content} onChange={(e) => setUpdateData({...updateData, content : e.target.value }) } /> : <span>{props.content}</span>\n            }\n            </Table.Cell>\n        </Table.Row>\n        <Table.Row>\n          <Table.HeaderCell>등록일</Table.HeaderCell>\n          <Table.Cell>{props.registrationDate}</Table.Cell>\n        </Table.Row>\n      </Table.Body>\n    </Table>\n      <Modal.Actions>\n        {\n          updateModalData === false ?\n            <Button color='green' onClick={() => setUpdateModalData(true)}>\n              수정하기\n            </Button>\n              :\n              <>\n              <Button color='red' onClick={() => boardDataUpdateFun('delete')}>\n                삭제\n              </Button>\n                <Button color='green' onClick={() => boardDataUpdateFun('update')}>\n                  수정\n                </Button>\n              </>\n        }\n        <Button color='green' onClick={() => window.location.replace(\"/board\")}>\n          닫기\n        </Button>\n      </Modal.Actions>\n    </>\n  )\n}\n\n\n\n\n\nexport default Board;\n","import React from \"react\";\nimport { Grid } from 'semantic-ui-react'\n\nfunction Main() {\n\n  return (\n    <div>\n     <h2>Hello Word!!</h2>\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useState} from \"react\";\nimport axios from 'axios';\nimport { Button, Table, Input , TextArea} from 'semantic-ui-react'\n\n\nconst BoardEnrollment = () =>{\n\t\tconst [insertData , setInsertData] = useState({\n\t\t\t\ttitle:'',\n\t\t\t\tcontent:''\n\t\t})\n\t\tconst insertDataFun = () =>{\n\n\t\t\t\taxios.post('/api/boardInsert', {\"title\":insertData.title, \"content\" : insertData.content, \"deleteYn\" : 'N'})\n\t\t\t\t\t\t.then(function(res){\n\t\t\t\t\t\t\t\tsetInsertData({title:'',content:''});\n\t\t\t\t\t\t\t\twindow.location.replace(\"/board\");\n\t\t\t\t\t\t})\n\t\t}\n\n\n\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t\t<Table celled padded>\n\t\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>제목</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell><Input type=\"text\" onChange={(e) => setInsertData({...insertData, title:e.target.value})} /></Table.Cell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>내용</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell><TextArea style={{ minHeight: 100, minWidth:600 }} onChange={(e, d) => setInsertData({...insertData,  content:e.target.value})} /></Table.Cell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t</Table.Body>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t<br/>\n\t\t\t\t\t\t<Button color='gray' onClick={() => insertDataFun()}  >등록</Button>\n\t\t\t\t\t\t<Button color='gray' onClick={() => window.location.replace(\"/board\")} >뒤로</Button>\n\t\t\t\t</div>\n\t\t)\n}\n\nexport default BoardEnrollment;","import React, {useState} from 'react';\nimport { Button, Table, Input } from 'semantic-ui-react'\n\n\nfunction Login() {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n      <div>\n          <h2>Login</h2>\n          <br/>\n          <form action=\"/login.do\" method=\"post\" id=\"login_form\">\n              <Input type=\"text\" name=\"encId\" value={id} onChange={(e) => setId(e.target.value)}/>\n              <br/>\n              <br/>\n              <Input type=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\n              <br/>\n              <br/>\n              <Button color='gray' type=\"submit\" className=\"btn_login\">로그인</Button>\n          </form>\n      </div>\n  );\n}\n\nexport default Login;\n","import React, {useEffect} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Menu from \"./Menu\";\nimport Board from \"../board/Board\";\nimport Main from \"../main/Main\";\nimport BoardEnrollment from \"../board/BoardEnrollment\";\nimport {Grid, Segment} from 'semantic-ui-react'\nimport Login from \"../login/login\";\n\nconst Layout = () => {\n\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t\t<div style={{margin: '0 auto', padding: '0 auto', width: '90%', marginTop:'3px'}}>\n\t\t\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t\t\t\t<Route path={['/main', '/board']} component={Menu}/>\n\t\t\t\t\t\t\t\t\t\t<Segment>\n\t\t\t\t\t\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path='/' component={Login}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path='/main' component={Main}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path='/board' component={Board}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Route exact path=\"/board/enrollment\" component={BoardEnrollment}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Route render={() => <div className='error'>error</div>}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t\t\t\t\t</Segment>\n\t\t\t\t\t\t\t\t</Router>\n\t\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t);\n}\n\nexport default Layout;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Layout from './layout/Layout';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}